name: .NET Aspire Samples CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
  
  pull_request:
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"

  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Build & Test Samples
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      DOTNET_MULTILEVEL_LOOKUP: false
      DOTNET_INSTALL_DIR: ${{ matrix.os == 'ubuntu-latest' && '' || 'dotnet' }}
      ASPIRE_ALLOW_UNSECURED_TRANSPORT: true
      SuppressNETCoreSdkPreviewMessage: true
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Install Azure Functions Core Tools
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update
        sudo apt-get install azure-functions-core-tools-4

    - name: Install .NET SDK (global.json)
      uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab # v4.3.0
      with:
        global-json-file: ${{ matrix.os == 'ubuntu-latest' && './global.json' || '.\global.json' }}
        dotnet-version: | 
          8.0.x
    
    - name: Print .NET info
      run: dotnet --info

    - uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
      with:
        node-version: '20.x'

    - name: Install & trust dev-certs
      id: install-dev-certs
      # Trusting certs on Windows throws a prompt so will halt the build
      if: matrix.os == 'ubuntu-latest'
      run: dotnet dev-certs https --trust

    - name: Build
      run: ${{ matrix.os == 'ubuntu-latest' && './build.sh' || '.\build.cmd' }}

    - name: Test
      id: test
      # We only test on Ubuntu because Windows agents don't support Docker with WSL
      if: matrix.os == 'ubuntu-latest'
      # Note that the space after the last double dash (--) is intentional
      run: >
        dotnet test ./tests/SamplesTests.sln
        --logger console --logger trx --logger html --logger GitHubActions
        --results-directory ./TestResults --blame
        -- 
        RunConfiguration.CollectSourceInformation=true
    
    - name: Publish Test Results
      if: (success() || steps.test.conclusion == 'failure') && matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
      with:
        name: TestResults_${{ matrix.os }}
        path: ./TestResults
